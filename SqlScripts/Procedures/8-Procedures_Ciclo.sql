/*
    * @author: Derek Rojas Mendoza
    * @author: Joseph Le√≥n Cabezas
*/

-- ----------------- CRUD para Ciclo -----------------

CREATE OR REPLACE PROCEDURE MOVILES.INSERTAR_CICLO(
    P_ANIO IN NUMBER,
    P_NUMERO IN NUMBER,
    P_FECHA_INICIO IN DATE,
    P_FECHA_FIN IN DATE,
    P_ACTIVO IN NUMBER
) AS
BEGIN
    INSERT INTO MOVILES.CICLO (ANIO, NUMERO, FECHA_INICIO, FECHA_FIN, ACTIVO) VALUES (P_ANIO, P_NUMERO, P_FECHA_INICIO, P_FECHA_FIN, P_ACTIVO);
END;
/

CREATE OR REPLACE FUNCTION MOVILES.OBTENER_CICLOS RETURN SYS_REFCURSOR AS
    RESULT_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN RESULT_CURSOR FOR SELECT * FROM MOVILES.CICLO;
    RETURN RESULT_CURSOR;
END;
/

CREATE OR REPLACE PROCEDURE MOVILES.ACTUALIZAR_CICLO(
    P_ANIO IN NUMBER,
    P_NUMERO IN NUMBER,
    P_FECHA_INICIO IN DATE,
    P_FECHA_FIN IN DATE,
    P_ACTIVO IN NUMBER
) AS
BEGIN
    UPDATE MOVILES.CICLO SET NUMERO = P_NUMERO, FECHA_INICIO = P_FECHA_INICIO, FECHA_FIN = P_FECHA_FIN, ACTIVO = P_ACTIVO WHERE ANIO = P_ANIO;
END;
/

CREATE OR REPLACE PROCEDURE MOVILES.ELIMINAR_CICLO(
    P_ANIO IN NUMBER,
    P_NUMERO IN NUMBER
) AS
BEGIN
    DELETE FROM MOVILES.CICLO WHERE ANIO = P_ANIO AND NUMERO = P_NUMERO;
END;
/

CREATE OR REPLACE FUNCTION MOVILES.OBTENER_CICLO_POR_ANIO(
    P_ANIO IN NUMBER
) RETURN SYS_REFCURSOR AS
    RESULT_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN RESULT_CURSOR FOR SELECT * FROM MOVILES.CICLO WHERE ANIO = P_ANIO;
    RETURN RESULT_CURSOR;
END;
/