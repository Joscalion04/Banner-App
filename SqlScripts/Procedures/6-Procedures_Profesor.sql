/*
    * @author: Derek Rojas Mendoza
    * @author: Joseph Le√≥n Cabezas
*/

-- ----------------- CRUD para Profesor -----------------

CREATE OR REPLACE PROCEDURE MOVILES.INSERTAR_PROFESOR(
    P_CEDULA IN VARCHAR2,
    P_NOMBRE IN VARCHAR2,
    P_TELEFONO IN VARCHAR2,
    P_EMAIL IN VARCHAR2
) AS
BEGIN
    INSERT INTO MOVILES.PROFESOR (CEDULA, NOMBRE, TELEFONO, EMAIL) VALUES (P_CEDULA, P_NOMBRE, P_TELEFONO, P_EMAIL);
END;
/

CREATE OR REPLACE FUNCTION MOVILES.OBTENER_PROFESORES RETURN SYS_REFCURSOR AS
    RESULT_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN RESULT_CURSOR FOR SELECT * FROM MOVILES.PROFESOR;
    RETURN RESULT_CURSOR;
END;
/

CREATE OR REPLACE PROCEDURE MOVILES.ACTUALIZAR_PROFESOR(
    P_CEDULA IN VARCHAR2,
    P_NOMBRE IN VARCHAR2,
    P_TELEFONO IN VARCHAR2,
    P_EMAIL IN VARCHAR2
) AS
BEGIN
    UPDATE MOVILES.PROFESOR SET NOMBRE = P_NOMBRE, TELEFONO = P_TELEFONO, EMAIL = P_EMAIL WHERE CEDULA = P_CEDULA;
END;
/

CREATE OR REPLACE PROCEDURE MOVILES.ELIMINAR_PROFESOR(
    P_CEDULA IN VARCHAR2
) AS
BEGIN
    DELETE FROM MOVILES.PROFESOR WHERE CEDULA = P_CEDULA;
END;
/

CREATE OR REPLACE FUNCTION MOVILES.OBTENER_PROFESOR_POR_CEDULA(
    P_CEDULA IN VARCHAR2
) RETURN SYS_REFCURSOR AS
    RESULT_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN RESULT_CURSOR FOR SELECT * FROM MOVILES.PROFESOR WHERE CEDULA = P_CEDULA;
    RETURN RESULT_CURSOR;
END;
/

CREATE OR REPLACE FUNCTION MOVILES.OBTENER_PROFESOR_POR_NOMBRE(
    P_NOMBRE IN VARCHAR2
) RETURN SYS_REFCURSOR AS
    RESULT_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN RESULT_CURSOR FOR SELECT * FROM MOVILES.PROFESOR WHERE NOMBRE = P_NOMBRE;
    RETURN RESULT_CURSOR;
END;
/